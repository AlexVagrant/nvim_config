snippet acm "template" b
// #pragma GCC optimize(2)
#include <bits/stdc++.h>
using namespace std;
#define endl '\n'
#define ll long long
#define x first
#define y second
#define all(a) a.begin(), a.end()
#define rall(a) a.rbegin(), a.rend()
#define Debug(x) cout << #x << ':' << x << endl
typedef pair<int, int> PII;

signed main()
{
	ios::sync_with_stdio(false);
	cin.tie(0);
	// cout.precision(num); double

	// clock_t start, finish;
	// start = clock();

	${0}

	// finish = clock();
	// cout <<endl<<"the time cost is:" << double(finish - start) / CLOCKS_PER_SEC<<endl;

	return 0;
}
endsnippet

snippet acw "template" b
#include <iostream>
#include <cstring>
#include <algorithm>

using namespace std;

#define ll long long

#define Debug(x) cout << #x << ':' << x << endl

#define x first

#define y second

typedef pair<int, int> PII;

const int N = 1e5+10;

int main()
{
	${0}
	return 0;
}
endsnippet

snippet out "template" c
void out()
{
	for (int i = 0; i <= n; i++)
	{
			for (int j = 0; j <= m; j++)
					cout << f[i][j] << ' ';
			cout << endl;
	}
	cout << endl;
}
endsnippet
